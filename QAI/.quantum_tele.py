# -*- coding: utf-8 -*-
"""quantum_tele.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lsXBke6y_bCY3yfEeNv8ehZXvsRbcWiX
"""

# Commented out IPython magic to ensure Python compatibility.
from qiskit.visualization import plot_bloch_multivector, plot_histogram
import numpy as np
from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit, execute, IBMQ
import matplotlib as plt
# %matplotlib inline

q = QuantumRegister(3, 'q')
c = ClassicalRegister(3, 'c')
circuit = QuantumCircuit(q, c)


circuit.draw(output = 'mpl')

circuit.x(0)

circuit.barrier()
circuit.draw(output= 'mpl')

circuit.h(1)

circuit.cs(1,2)
circuit.draw(output= 'mpl')

circuit.cs(0,1)
circuit.h(0)

circuit.barrier()
circuit.measure([0,1], [0,1])

circuit.draw(output='mpl')

circuit.barrier()
circuit.cx(1,2)
circuit.cz(0,2)
circuit.draw(output = 'mpl')

from qiskit.tools.visualization import plot_histogram
from qiskit import Aer

sim = Aer.get_backend('qasm_simulator')

circuit.measure(2,2)
result = execute(circuit, backend=sim, shots=1000).result()
counts = result.get_counts()

counts

plot_histogram(counts)

































