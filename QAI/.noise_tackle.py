# -*- coding: utf-8 -*-
"""noise_tackle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Txobx-OOw9_mnZ3Zv7hZ8Q9eMOHPDz6c
"""

!pip install qiskit-ignis

!pip install qiskit-aer

from qiskit import QuantumCircuit, assemble, Aer, transpile
from qiskit.visualization import plot_histogram
from qiskit.ignis.mitigation import CompleteMeasFitter, complete_meas_cal, tensored_meas_cal

qc=QuantumCircuit (3,3)
state_labels = ['000', '001', '010', '011', '100', '101', '110', '111']

qc.h(0)
qc.cx(0, 1)
qc.cx(0, 2)
qc.measure([0,1,2],[0,1,2])

backend = Aer.get_backend('qasm_simulator')
transpiled_qc = transpile(qc, backend)

qobj = assemble(transpiled_qc, shots=1000)
job=backend.run(qobj)
result = job.result()
counts = result.get_counts()

cal_circuits, state_labels = complete_meas_cal(qubit_list=[0, 1, 2])
cal_job=backend.run(assemble(qc))
cal_results = cal_job.result()

meas_fitter = CompleteMeasFitter(cal_results, state_labels)

mitigated_counts = meas_fitter.filter.apply(cal_results.get_counts(qc))

print("Original counts:",counts)

print('mitigated_counts',mitigated_counts)

plot_histogram([counts, mitigated_counts], legend=['Original','Mitigated'])







