# -*- coding: utf-8 -*-
"""QFT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wqdDUV-0VUL4m_UHIlj2ruiEOK-cRfzR
"""

!pip install qiskit

!pip install qiskit-ibmq-provider

!pip install pylatexenc

from qiskit import QuantumRegister, ClassicalRegister
from qiskit import QuantumCircuit, execute,IBMQ
from qiskit.tools.monitor import job_monitor
from qiskit.circuit.library import QFT
import numpy as np

pi = np.pi
IBMQ.enable_account('0b456d213ef175d138eec5819bd9c7e0e5632794df655bb6673ac4d4466eaa512e80b7d747728a8bed03209cf11221bce342256ec3f5a3b0cf6fce04cfd1ee9a')
provider = IBMQ.get_provider(hub='ibm-q')
backend = provider.get_backend('ibmq_qasm_simulator')
q = QuantumRegister(5,'q')
c = ClassicalRegister(5,'c')
circuit = QuantumCircuit(q,c)
circuit.x(q[4])
circuit.x(q[2])
circuit.x(q[0])
qft_circuit = QFT(num_qubits=5, approximation_degree=0, do_swaps=True, inverse=False,insert_barriers=False, name="qft")
circuit = circuit.compose(qft_circuit)
circuit.measure(q,c)
circuit.draw(output="mpl", filename="qft1.png")

print(circuit)

job = execute(circuit, backend, shots=1000)

job_monitor(job)

counts = job.result().get_counts()
print("\n QFT Output")
print("-------------")
print(counts)

